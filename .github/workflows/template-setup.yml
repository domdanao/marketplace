name: Template Setup

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]

jobs:
  test:
    runs-on: ubuntu-latest
    
    strategy:
      matrix:
        php-version: [8.3, 8.4]
        node-version: [20]

    services:
      mysql:
        image: mysql:8.0
        env:
          MYSQL_DATABASE: marketplace_test
          MYSQL_ROOT_PASSWORD: password
        ports:
          - 3306:3306
        options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3

    steps:
    - uses: actions/checkout@v4

    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: ${{ matrix.php-version }}
        extensions: mbstring, dom, fileinfo, mysql, gd
        coverage: xdebug

    - name: Setup Node.js
      uses: actions/setup-node@v4
      with:
        node-version: ${{ matrix.node-version }}
        cache: 'npm'

    - name: Cache Composer dependencies
      uses: actions/cache@v3
      with:
        path: vendor
        key: ${{ runner.os }}-composer-${{ hashFiles('**/composer.lock') }}
        restore-keys: ${{ runner.os }}-composer-

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Install NPM dependencies
      run: npm ci

    - name: Setup environment
      run: |
        cp .env.template .env
        php artisan key:generate
        php artisan config:cache

    - name: Run database migrations
      run: php artisan migrate --force
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: marketplace_test
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Build assets
      run: npm run build

    - name: Run PHP tests
      run: php artisan test --coverage
      env:
        DB_HOST: 127.0.0.1
        DB_DATABASE: marketplace_test
        DB_USERNAME: root
        DB_PASSWORD: password

    - name: Run PHP code style checks
      run: vendor/bin/pint --test

    - name: Run JavaScript/TypeScript checks
      run: |
        npm run lint
        npm run type-check

  security:
    runs-on: ubuntu-latest
    steps:
    - uses: actions/checkout@v4
    
    - name: Setup PHP
      uses: shivammathur/setup-php@v2
      with:
        php-version: 8.4
        extensions: mbstring, dom, fileinfo, mysql

    - name: Install Composer dependencies
      run: composer install --no-progress --prefer-dist --optimize-autoloader

    - name: Run security audit
      run: composer audit

    - name: Check for known security vulnerabilities
      run: |
        composer require --dev enlightn/security-checker
        vendor/bin/security-checker security:check composer.lock